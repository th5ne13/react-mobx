{"ast":null,"code":"import _initializerDefineProperty from \"/Users/oliver/Documents/reactwithmobx-master/source-template/5.todo-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/oliver/Documents/reactwithmobx-master/source-template/5.todo-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/oliver/Documents/reactwithmobx-master/source-template/5.todo-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _descriptor2, _temp;\n\nimport { observable, action, computed, makeObservable } from 'mobx';\nlet TodoStore = (_class = (_temp = class TodoStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_todo\", _descriptor, this);\n\n    _initializerDefineProperty(this, \"_todos\", _descriptor2, this);\n\n    makeObservable(this);\n  }\n\n  get todo() {\n    // get 메소드 사용 \n    return this._todo;\n  }\n\n  get todos() {\n    return this._todos;\n  }\n\n  // observable 데이터를 변경할때에는 @action 데코레이터 사용\n  setTodoProps(name, value) {\n    this._todo = { ...this._todo,\n      [name]: value\n    };\n  }\n\n  addTodo(todo) {\n    // todos에 데이터를 추가하기위한 메소드\n    this.todos.push(todo);\n  }\n\n  selectedTodo(todo) {}\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_todo\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return {};\n  }\n}), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, \"_todos\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return [];\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"todos\", [computed], Object.getOwnPropertyDescriptor(_class.prototype, \"todos\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"setTodoProps\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"setTodoProps\"), _class.prototype), _applyDecoratedDescriptor(_class.prototype, \"addTodo\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"addTodo\"), _class.prototype)), _class);\nexport default new TodoStore();","map":{"version":3,"sources":["/Users/oliver/Documents/reactwithmobx-master/source-template/5.todo-mobx/src/stores/TodoStore.js"],"names":["observable","action","computed","makeObservable","TodoStore","constructor","todo","_todo","todos","_todos","setTodoProps","name","value","addTodo","push","selectedTodo"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,EAA6BC,QAA7B,EAAuCC,cAAvC,QAA6D,MAA7D;IAEMC,S,sBAAN,MAAMA,SAAN,CAAgB;AAEZC,EAAAA,WAAW,GAAG;AAAA;;AAAA;;AACVF,IAAAA,cAAc,CAAC,IAAD,CAAd;AACH;;AAUD,MAAIG,IAAJ,GAAW;AAAK;AACZ,WAAO,KAAKC,KAAZ;AACH;;AAED,MACIC,KADJ,GACY;AACR,WAAO,KAAKC,MAAZ;AACH;;AAEO;AACRC,EAAAA,YADA,CACaC,IADb,EACmBC,KADnB,EAC0B;AACtB,SAAKL,KAAL,GAAa,EACT,GAAG,KAAKA,KADC;AAET,OAACI,IAAD,GAAQC;AAFC,KAAb;AAIH;;AAGDC,EAAAA,OADA,CACQP,IADR,EACc;AAAM;AAChB,SAAKE,KAAL,CAAWM,IAAX,CAAgBR,IAAhB;AACH;;AAEDS,EAAAA,YAAY,CAACT,IAAD,EAAO,CAElB;;AAtCW,C,+EAMXN,U;;;;;WACO,E;;0EAIPA,U;;;;;WACQ,E;;0DAMRE,Q,+IAKAD,M,iJAQAA,M;AAWL,eAAe,IAAIG,SAAJ,EAAf","sourcesContent":["import { observable, action, computed, makeObservable } from 'mobx';\n\nclass TodoStore {\n\n    constructor() {\n        makeObservable(this);\n    }\n\n    @observable\n    _todo = {\n\n    } // id, title, date\n\n    @observable\n    _todos = [];\n\n    get todo() {    // get 메소드 사용 \n        return this._todo;\n    }\n\n    @computed\n    get todos() {\n        return this._todos;\n    }\n\n    @action // observable 데이터를 변경할때에는 @action 데코레이터 사용\n    setTodoProps(name, value) {\n        this._todo = {\n            ...this._todo,\n            [name]: value\n        }\n    }\n\n    @action\n    addTodo(todo) {     // todos에 데이터를 추가하기위한 메소드\n        this.todos.push(todo);\n    }\n\n    selectedTodo(todo) {\n\n    }\n}\n\n\nexport default new TodoStore();"]},"metadata":{},"sourceType":"module"}