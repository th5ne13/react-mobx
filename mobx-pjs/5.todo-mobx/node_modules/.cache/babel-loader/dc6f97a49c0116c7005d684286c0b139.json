{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/oliver/Documents/reactwithmobx-master/source-template/5.todo-mobx/src/containers/TodoEditFormContainer.js\",\n    _dec,\n    _class;\n\nimport React, { Component } from 'react';\nimport TodoEditFormView from '../views/TodoEditFormView';\nimport { inject, observer } from 'mobx-react';\nimport autobind from 'autobind-decorator';\nlet // 2개의 데코레이터 적용. -> todoStore 사용 가능\nTodoEditFormContainer = (_dec = inject('todoStore'), _dec(_class = autobind(_class = observer(_class = class TodoEditFormContainer extends Component {\n  onSetTodoProps(name, value) {\n    this.props.todoStore.setTodoProps(name, value); // todostore가\n    // 가지고있는 setTodoProps 메소드를 호출하는 onSetTodoProps를 만들어\n    // TodoEditFormView에다 전달해주는것\n  }\n\n  onAddTodo() {\n    let {\n      todo\n    } = this.props.todoStore;\n  }\n\n  render() {\n    const {\n      todoStore\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(TodoEditFormView, {\n      todo: todoStore.todo,\n      onSetTodoProps: this.onSetTodoProps // @autobind를 써주었기떄문에 클래스내에서 일어나는 bind는 신경쓰지않아도됨\n\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this) // get todo()를 가져와서 props로 전달해주는것 \n    ;\n  }\n\n}) || _class) || _class) || _class);\nexport default TodoEditFormContainer;","map":{"version":3,"sources":["/Users/oliver/Documents/reactwithmobx-master/source-template/5.todo-mobx/src/containers/TodoEditFormContainer.js"],"names":["React","Component","TodoEditFormView","inject","observer","autobind","TodoEditFormContainer","onSetTodoProps","name","value","props","todoStore","setTodoProps","onAddTodo","todo","render"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,gBAAP,MAA6B,2BAA7B;AAEA,SAASC,MAAT,EAAiBC,QAAjB,QAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,oBAArB;IAIU;AACJC,qB,WAHLH,MAAM,CAAC,WAAD,C,gBACNE,Q,UACAD,Q,UAFD,MAGME,qBAHN,SAGoCL,SAHpC,CAG8C;AAE5CM,EAAAA,cAAc,CAACC,IAAD,EAAOC,KAAP,EAAc;AAC1B,SAAKC,KAAL,CAAWC,SAAX,CAAqBC,YAArB,CAAkCJ,IAAlC,EAAwCC,KAAxC,EAD0B,CACsB;AAChD;AACA;AACD;;AAEDI,EAAAA,SAAS,GAAG;AACV,QAAI;AAAEC,MAAAA;AAAF,QAAW,KAAKJ,KAAL,CAAWC,SAA1B;AACD;;AAGDI,EAAAA,MAAM,GAAG;AAEP,UAAM;AAAEJ,MAAAA;AAAF,QAAgB,KAAKD,KAA3B;AACA,wBACE,QAAC,gBAAD;AACE,MAAA,IAAI,EAAEC,SAAS,CAACG,IADlB;AAEE,MAAA,cAAc,EAAE,KAAKP,cAFvB,CAEwC;;AAFxC;AAAA;AAAA;AAAA;AAAA,YADF,CAKE;AALF;AAOD;;AAvB2C,C;AA0B9C,eAAeD,qBAAf","sourcesContent":["import React, { Component } from 'react';\nimport TodoEditFormView from '../views/TodoEditFormView';\n\nimport { inject, observer } from 'mobx-react';\nimport autobind from 'autobind-decorator';\n\n@inject('todoStore')\n@autobind\n@observer // 2개의 데코레이터 적용. -> todoStore 사용 가능\nclass TodoEditFormContainer extends Component {\n\n  onSetTodoProps(name, value) {\n    this.props.todoStore.setTodoProps(name, value); // todostore가\n    // 가지고있는 setTodoProps 메소드를 호출하는 onSetTodoProps를 만들어\n    // TodoEditFormView에다 전달해주는것\n  }\n\n  onAddTodo() {\n    let { todo } = this.props.todoStore;\n  }\n\n\n  render() {\n\n    const { todoStore } = this.props;\n    return (\n      <TodoEditFormView\n        todo={todoStore.todo}\n        onSetTodoProps={this.onSetTodoProps}  // @autobind를 써주었기떄문에 클래스내에서 일어나는 bind는 신경쓰지않아도됨\n      />\n      // get todo()를 가져와서 props로 전달해주는것 \n    )\n  }\n}\n\nexport default TodoEditFormContainer;"]},"metadata":{},"sourceType":"module"}