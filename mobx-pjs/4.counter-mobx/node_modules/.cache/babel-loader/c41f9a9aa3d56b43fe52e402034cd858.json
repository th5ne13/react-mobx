{"ast":null,"code":"import _initializerDefineProperty from \"/Users/oliver/Documents/reactwithmobx-master/source-template/4.counter-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerDefineProperty\";\nimport _applyDecoratedDescriptor from \"/Users/oliver/Documents/reactwithmobx-master/source-template/4.counter-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/applyDecoratedDescriptor\";\nimport _initializerWarningHelper from \"/Users/oliver/Documents/reactwithmobx-master/source-template/4.counter-mobx/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/initializerWarningHelper\";\n\nvar _class, _descriptor, _temp;\n\nimport { observable, action } from 'mobx';\nlet CounterStore = (_class = (_temp = class CounterStore {\n  constructor() {\n    _initializerDefineProperty(this, \"_count\", _descriptor, this);\n  }\n\n  increment() {\n    this._count++;\n  }\n\n  decrement() {\n    this._count--;\n  }\n\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, \"_count\", [observable], {\n  configurable: true,\n  enumerable: true,\n  writable: true,\n  initializer: function () {\n    return 5;\n  }\n}), _applyDecoratedDescriptor(_class.prototype, \"increment\", [action], Object.getOwnPropertyDescriptor(_class.prototype, \"increment\"), _class.prototype)), _class);\nexport default new CounterStore();","map":{"version":3,"sources":["/Users/oliver/Documents/reactwithmobx-master/source-template/4.counter-mobx/src/store/CounterStore.js"],"names":["observable","action","CounterStore","increment","_count","decrement"],"mappings":";;;;;;AAAA,SAASA,UAAT,EAAqBC,MAArB,QAAmC,MAAnC;IAEMC,Y,sBAAN,MAAMA,YAAN,CAAmB;AAAA;AAAA;AAAA;;AAOfC,EAAAA,SADA,GACY;AACR,SAAKC,MAAL;AACH;;AACDC,EAAAA,SAAS,GAAG;AACR,SAAKD,MAAL;AACH;;AAZc,C,gFAGdJ,U;;;;;WACQ,C;;8DAERC,M;AASL,eAAe,IAAIC,YAAJ,EAAf","sourcesContent":["import { observable, action } from 'mobx';\n\nclass CounterStore {\n\n    // observable로 덮어주면, 이 count는 특정 observer가 바라보는 state 객체가 되는것 \n    @observable\n    _count = 5\n\n    @action\n    increment() {\n        this._count++;\n    }\n    decrement() {\n        this._count--;\n    }\n}\n\nexport default new CounterStore();"]},"metadata":{},"sourceType":"module"}